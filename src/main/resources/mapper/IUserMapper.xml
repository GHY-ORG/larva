<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ghy.larva.dao.IUserMapper">

  <resultMap id="UserResultMap" type="cn.ghy.larva.domain.User">
    <id column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
    <result column="user_status" jdbcType="INTEGER" property="userStatus"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
    <collection property="metas" ofType="cn.ghy.larva.domain.Meta">
      <result column="meta_key" jdbcType="VARCHAR" property="metaKey"/>
      <result column="meta_value" jdbcType="LONGVARCHAR" property="metaValue"/>
    </collection>
  </resultMap>

  <insert id="userInsert" parameterType="cn.ghy.larva.domain.User" useGeneratedKeys="true"
      keyProperty="userId">
    insert into user (user_id, user_name, password,
                      real_name, user_email)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{realName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR})
  </insert>

  <select id="isEmailAvailable" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(user_email)
    from user
    where user_email = #{userEmail, jdbcType=VARCHAR}
  </select>

  <delete id="deleteById" parameterType="java.lang.Long">
    delete
    from user
    where user_id = #{userId,jdbcType=BIGINT};
    delete
    from user_meta
    where user_id = #{userId,jdbcType=BIGINT};
  </delete>

  <update id="updateById" parameterType="cn.ghy.larva.domain.User">
    update user
    set user_name   = #{userName,jdbcType=VARCHAR},
      password      = #{password,jdbcType=VARCHAR},
      real_name     = #{realName,jdbcType=VARCHAR},
      user_email    = #{userEmail,jdbcType=VARCHAR},
      user_status   = #{userStatus,jdbcType=INTEGER},
      create_time   = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="UserResultMap">
    select user_id,
      user_name,
      password,
      user_status
    from user
    where user.user_name = #{userName,jdbcType=VARCHAR}
  </select>

  <select id="selectById" parameterType="java.lang.Long" resultMap="UserResultMap">
    select user.user_id,
      user.user_name,
      user.password,
      user.real_name,
      user.user_email,
      user.user_status,
      user.create_time,
      user.modified_time,
      user_meta.meta_key,
      user_meta.meta_value
    from user
           left join user_meta on user.user_id = user_meta.user_id
    where user.user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="UserResultMap">
    select user.user_id,
      user.user_name,
      user.password,
      user.real_name,
      user.user_email,
      user.user_status,
      user.create_time,
      user.modified_time,
      user_meta.meta_key,
      user_meta.meta_value
    from user
           left join user_meta on user.user_id = user_meta.user_id
  </select>
</mapper>